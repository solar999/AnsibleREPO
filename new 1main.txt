




																																						

- name: run multiple commands on remote nodes
  cisco.ios.ios_command:
    commands:
    - show version
    - show interfaces
	
second.yml playbook
---
- name: first play
  hosts: routers
  gather_facts: false
  connection: local
  tasks:
     - name: First task
       debug:
         var: ansible_facts
     - name: execute & command
       shell: uptime
       register: uptime
     - name: show uptime
       debug:
         var: uptime
		 
to install cisco ios modules 
ansible-galaxy collection install cisco.ios
ansible-playbook second.yml --syntax-check
		 
[routers]
IOSRTR ansible_host=192.168.1.100
vIOS ansible_host=10.10.10.99
192.168.1.10
192.168.1.100
10.10.10.99
10.10.10.20

[routers:vars]
ansible_network_os=ios
ansible_user=eve
ansible_password=eve

[servers]
192.168.1.48 ansible_user=eve ansible_password=eve
192.168.1.45 ansible_user=eve ansible_password=eve
10.10.10.90 ansible_user=eve ansible_password=eve
10.10.10.50 ansible_user=eve ansible_password=eve


eve@Linux-Desktop:~$ ssh -Q key
ssh-ed25519
ssh-ed25519-cert-v01@openssh.com
sk-ssh-ed25519@openssh.com
sk-ssh-ed25519-cert-v01@openssh.com
ssh-rsa
ssh-dss
ecdsa-sha2-nistp256
ecdsa-sha2-nistp384
ecdsa-sha2-nistp521
sk-ecdsa-sha2-nistp256@openssh.com
ssh-rsa-cert-v01@openssh.com
ssh-dss-cert-v01@openssh.com
ecdsa-sha2-nistp256-cert-v01@openssh.com
ecdsa-sha2-nistp384-cert-v01@openssh.com
ecdsa-sha2-nistp521-cert-v01@openssh.com
sk-ecdsa-sha2-nistp256-cert-v01@openssh.com
eve@Linux-Desktop:~$ ssh -Q cipher
3des-cbc
aes128-cbc
aes192-cbc
aes256-cbc
rijndael-cbc@lysator.liu.se
aes128-ctr
aes192-ctr
aes256-ctr
aes128-gcm@openssh.com
aes256-gcm@openssh.com
chacha20-poly1305@openssh.com
eve@Linux-Desktop:~$ ssh -Q kex
diffie-hellman-group1-sha1
diffie-hellman-group14-sha1
diffie-hellman-group14-sha256
diffie-hellman-group16-sha512
diffie-hellman-group18-sha512
diffie-hellman-group-exchange-sha1
diffie-hellman-group-exchange-sha256
ecdh-sha2-nistp256
ecdh-sha2-nistp384
ecdh-sha2-nistp521
curve25519-sha256
curve25519-sha256@libssh.org
sntrup4591761x25519-sha512@tinyssh.org
eve@Linux-Desktop:~$ ssh -Q mac
hmac-sha1
hmac-sha1-96
hmac-sha2-256
hmac-sha2-512
hmac-md5
hmac-md5-96
umac-64@openssh.com
umac-128@openssh.com
hmac-sha1-etm@openssh.com
hmac-sha1-96-etm@openssh.com
hmac-sha2-256-etm@openssh.com
hmac-sha2-512-etm@openssh.com
hmac-md5-etm@openssh.com
hmac-md5-96-etm@openssh.com
umac-64-etm@openssh.com
umac-128-etm@openssh.com


To get the list of all supported algorithms, ciphers and methods that our SSH client currently supports, we can use the ‘-Q’ option like this:

ssh -Q mac
ssh -Q kex
ssh -Q key
ssh -Q cipher




{
echo -n 'Ciphers '
ssh -Q cipher | tr '\n' ',' | sed -e 's/,$//'; echo

echo -n 'MACs '
ssh -Q mac | tr '\n' ',' | sed -e 's/,$//'; echo

echo -n 'HostKeyAlgorithms '
ssh -Q key | tr '\n' ',' | sed -e 's/,$//'; echo

echo -n 'KexAlgorithms '
ssh -Q kex | tr '\n' ',' | sed -e 's/,$//'; echo

} >> ~/.ssh/config



server pubkey

ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCw2nFCeOas/p3uvjoErwhM+qWA
NNNvey3SQ8bu5xoHEqwSA7Wyn5puveahX/saooMM3uHp4962x/JzuobhlO7sqQj
3C11U1u3KhXOhhBBX2a2RvdxVHz7fe4iEfxMTn3nOtxF7OZ06R27tuTDzE5BzGSK
ioA8IGuvD/ClT9gqho/3c1ONeCqAc6HGSenegJH+7EWkMLVP2XXlcVS5V+A2M8I
JEeJc5tRbJ/0Twn3vSF5gb/GgRhijzECwgsrzHWq/G2/K4ON7m1eaDn1xopfzL
Biw8vJ9KWotp+I4W3S3twOyWDmhHghFhdwLVo25LCZMu1Gw/DVGqhbP1IP2B3gtz
QR3F5Gm70p0nzEUGTYHTd6vBjUOoK/rb3UdQXcqlE+PNlz28GnwQRoIZrmOUwVJ
wE1N3XSw7gxVpIv71AZzi9/rhdeXO5w+ZiJHSlF0dvs8O6Mg2DZt0yRb+ibuU
5n/zNFHt9JWJ2pPhZssPG0kS39Z5/jFJUEdpRI5chZGbbOk= eve@Linux-Desktop

Ansible commands

eve@Linux-Desktop:/etc/ansible$ ansible all --list-hosts




